spring:
  application:
    name: springboot-playground
  jackson:
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    property-naming-strategy: SNAKE_CASE
    serialization:
      INDENT_OUTPUT: true
      write_dates_as_timestamps: false
    serialization-inclusion: non_null
  jmx:
    enabled: false
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:@rabbitmq.host@}
    port: ${SPRING_RABBITMQ_PORT:@rabbitmq.port@}
    username: guest
    password: guest
    requested-heartbeat: 30
    connection-timeout: 30000
    publisher-returns: true
    publisher-confirm-type: simple
    template:
      retry:
        enabled: true
        max-attempts: 3
    listener:
      simple:
        acknowledge-mode: auto
        prefetch: 1
        concurrency: 10
        retry:
          enabled: true
          max-attempts: 3
  redis:
    host: ${SPRING_REDIS_HOST:@redis.host@}
    port: ${SPRING_REDIS_PORT:@redis.port@}
  cache:
    type: redis
    redis:
      time-to-live: 10000 # 10 secs
management:
  server:
    port: 8090
  endpoints:
    web:
      base-path: /
      exposure:
        include:
          - health
          - info
          - metrics
          - prometheus

rabbitmq:
  exchange-name: ha.app
  inbox:
    routing-key: inbox
    queue-name: ha.app.inbox
  dead-letter:
    routing-key: dead-letter
    queue-name: ha.app.dead-letter

service-endpoints:
  http-bin:
    base-url: "http://localhost:8001"
    paths:
      get-slide-show-data: "/json"

oauth2:
  tokens:
    token-info-uri: ""
    access-token-uri: ""
  scopes:
    read: ""
    write: ""

server:
  port: 8080
  shutdown: graceful

logging:
  level:
    root: info

resilience4j:
  retry:
    instances:
      rest-default:
        maxAttempts: 3
        waitDuration: 100
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - dev.coding.springboot.common.exception.SystemException
        ignoreExceptions:
          - dev.coding.springboot.common.exception.BusinessException
